version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: personal_trainer_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - personal_trainer_network_prod
    command: --default-authentication-plugin=mysql_native_password

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: nh-personal-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
    env_file:
      - ./backend/.env
    networks:
      - nh-personal-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nh-personal-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - nh-personal-network
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
      - NODE_ENV=production

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: nh-personal-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - nh-personal-network

volumes:
  mysql_data_prod:
    driver: local
  nh-personal-data:

networks:
  personal_trainer_network_prod:
    driver: bridge
  nh-personal-network:
    driver: bridge 