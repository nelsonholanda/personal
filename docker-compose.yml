version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: personal_trainer_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: personal_trainer_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - personal_trainer_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: personal_trainer_backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      DATABASE_URL: mysql://app_user:app_password@mysql:3306/personal_trainer_db
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3001
    depends_on:
      - mysql
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - personal_trainer_network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: personal_trainer_frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3001
      REACT_APP_ENV: production
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - personal_trainer_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: personal_trainer_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - personal_trainer_network

volumes:
  mysql_data:

networks:
  personal_trainer_network:
    driver: bridge 