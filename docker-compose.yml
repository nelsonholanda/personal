version: '3.8'

services:
  # Backend API
  backend:
    image: personal-backend
    container_name: personal_trainer_backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - AWS_SECRET_NAME=${AWS_SECRET_NAME}
      - AWS_REGION=${AWS_REGION:-us-east-2}
      - RDS_HOST=${RDS_HOST}
      - RDS_PORT=${RDS_PORT:-3306}
      - RDS_USERNAME=${RDS_USERNAME}
      - RDS_PASSWORD=${RDS_PASSWORD}
      - RDS_DATABASE=${RDS_DATABASE}
    networks:
      - personal_trainer_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App
  frontend:
    image: personal-frontend
    container_name: personal_trainer_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - personal_trainer_network
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
      - NODE_ENV=production

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: personal_trainer_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - personal_trainer_network

networks:
  personal_trainer_network:
    driver: bridge 